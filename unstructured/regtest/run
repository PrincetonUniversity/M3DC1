#!/bin/bash

if [ -z "$1" ]; then
    suffix="${M3DC1_ARCH}"
else
    suffix="$1"
fi

if [ -z "${suffix}" ]; then
    suffix="test"
fi

if [ -z "${M3DC1_VERSION}" ]; then
    M3DC1_VERSION="local"
fi

# Test cases to run
if [ -z "$2" ]; then
    dir=( "KPRAD_2D" "RMP" "RMP_nonlin" "adapt" "pellet" )
else
    dir="$2"
fi

# Test whether executables are in PATH
BADPATH='F'
if ! [ -x "$(command -v m3dc1_2d)" ]; then
  echo 'Error: m3dc1_2d not found in PATH'
  BADPATH='T'
fi
if ! [ -x "$(command -v m3dc1_2d_complex)" ]; then
  echo 'Error: m3dc1_2d_complex not found in PATH'
  BADPATH='T'
fi
if ! [ -x "$(command -v m3dc1_3d)" ]; then
  echo 'Error: m3dc1_3d not found in PATH'
  BADPATH='T'
fi
if ! [ -x "$(command -v part_mesh.sh)" ]; then
  echo 'Error: part_mesh.sh not found in PATH'
  BADPATH='T'
fi
if ! [ -x "$(command -v make_model)" ]; then
  echo 'Error: make_model not found in PATH'
  BADPATH='T'
fi
if ! [ -x "$(command -v split_smb)" ]; then
  echo 'Error: split_smb not found in PATH'
  BADPATH='T'
fi
if [ "${BADPATH}" = 'T' ]; then
    echo
    echo "Please load m3dc1 module or set PATH to include M3DC1 executables"
    echo "Running 'make bin' from 'unstructured' directory will make a"
    echo "directory '_{M3DC1_ARCH}/bin' that contains all M3DC1 executables"
    echo
    exit 1;
fi


echo "Suffix = $suffix"
echo "M3DC1_VERSION = $M3DC1_VERSION"

wd=`pwd`

# Name of test directory
test="${M3DC1_VERSION}_${suffix}"

# Command to run in each test directory
run="sbatch batchjob.${suffix}"


for i in "${dir[@]}"; do 
    if [ ! -e "$wd/$i/base/batchjob.${suffix}" ]; then
	echo "No batch file found for ${suffix} in $i"
	continue
    fi

    cd $i

    # write out the full path here so we don't accidentally 
    # delete a home directory if $test is set wrong
    test_dir="$wd/$i/$test"
    echo "$test_dir"

    if [ -d "$test_dir" ]; then
	echo "Directory exists"
	rm -fr "$test_dir"
    fi
    cp -r base "$test_dir"
    cd "$test_dir"
    rm C1ke
    $run

    cd $wd
done
