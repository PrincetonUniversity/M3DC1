The regression tests here work by copying the "base" subdirectory to a
new subdirectory, running the code in the new directory, and comparing
the resulting C1ke file with that in the "base" subdirectory.

The test batch scripts assume that m3dc1_2d, m3dc1_2d_complex,
m3dc1_3d, m3dc1_3d_st, part_mesh.sh, and the SCOREC utility
execultables are all in a directory included in ${PATH}.  Test
directory naming conventions assume that ${M3DC1_VERSION} and
${M3DC1_ARCH} are set properly.  These environment variables are all
set by the m3dc1 modules, so please load those if they are available.
To use a version for which there is no module (i.e. a version compiled
from the source code), please run "make bin" from the unstructured
directory, and add the "unstructured/_${M3DC1_ARC}/bin" path to the
${PATH} variable.

If you are adding or modifying a regression test, please see the
"Notes for Developers" section at the end of this README.


RUNNING
=======

To submit the regression tests run the following command:

./run <config>

where <config> is an optional keyword describing the particular
configuration you want to use.  New test subdirectories will be named
${M3DC1_VERSION}_<config>, and the batch script batchjob.<config>
(defined in the "base" directories) will be used to launch the jobs.
If <config> is not included, it defaults to $M3DC1_ARCH.


CHECKING RESULTS
================

To check the results of the regression tests, run the following
command:

./check <config>

where <config> has the same value supplied to the "run" script.  The
"check" script will indicate whether the tests have started or
finished.  If they have finished, it will compare the C1ke file with
those in the "base" directory.


CLEANING UP
===========

The test subdirectories can be deleted by running

./clean <config>


NOTES FOR DEVELOPERS
====================

Adding new regression tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~
To add a new test (for example, we'll call it "new_test") :
1. Make a subdirectory for the new test: (e.g. unstructured/regtest/new_test/)
2. Make a sub-subdirectory called "base":  unstructured/regtest/new_test/base/
3. Put the C1input file, mesh file, and any other needed input files in unstructured/regtest/new_test/base/
5. 
6. Follow the batch script conventions used in the other tests.  These conventions must be followed for the ./run and ./check scripts to work properly
7. Add "new_test" to the "dir" variable in the "run" script

Please keep the following in mind:
* The mesh files should be very small, preferrably < 1 MB.
* The test case should run quickly (less than 5 min) on a few nodes or
fewer.
* Only the input files and C1ke file in base/ should be added to the
repository.  Don't add any code output to the repository, other than
the C1ke file.


Mesh files
~~~~~~~~~~

Since results depend sensitively on the discretization, mesh files
(*.smb) can be included in the repository.  However, these files can
be large, and should be stored using git-lfs.  To enable git-lfs in
your local directory, run "git lfs install".  .smb files can then be
added to the repository using the normal git commands (i.e. "git add
mesh.smb").  The .gitattributes file in this repository will ensure
that git-lfs is automatically used for .smb files.


Changing Results
~~~~~~~~~~~~~~~~

Sometimes due to a bugfix or other change to the code, the "correct"
C1ke output will change.  If this change is expected and understood,
the base/C1ke file can be overwritten with the "correct" C1ke output.
Whenever this happens, a note should be added to the CHANGELOG
explaining the cause of the change.