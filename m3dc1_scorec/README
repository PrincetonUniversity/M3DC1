*******************************************************************
PREP: SET ENVIRONMENT (modify as needed)
*******************************************************************
export PREFIX="the install directory"
export MPIHOME=/usr/local/openmpi/latest
export PETSC_DIR=/lore/fzhang/petsc-real/petsc-3.5.1
export PETSC_ARCH=test
export ZOLTAN_HOME=/usr/local/zoltan/latest/openmpi1.6.5_gcc4.4.5
export PARMETIS_HOME=/usr/local/parmetis/latest/openmpi1.6.5_gcc4.4.5_dbg

*******************************************************************
STEP 1: INSTALL SCOREC TOOLS
*******************************************************************
cd $PREFIX
git clone https://github.com/SCOREC/core.git
cd $PREFIX/core
edit config.sh (see example below)

cmake .. \
  -DCMAKE_C_COMPILER="$MPIHOME/bin/mpicc" \
  -DCMAKE_CXX_COMPILER="$MPIHOME/bin/mpicxx" \
  -DCMAKE_C_FLAGS=" -g -O2" \
  -DCMAKE_CXX_FLAGS=" -g -O2" \
  -DENABLE_THREADS=ON \
  -DENABLE_ZOLTAN=ON \
  -DZOLTAN_INCLUDE_DIR="$ZOLTAN_HOME/include" \
  -DZOLTAN_LIBRARY="$ZOLTAN_HOME/lib" \
  -DPARMETIS_INCLUDE_DIR="$PARMETIS_HOME/include" \
  -DPARMETIS_LIBRARY="$PARMETIS_HOME/lib" \
  -DMETIS_LIBRARY="$PARMETIS_HOME/lib" \
  -DCMAKE_INSTALL_PREFIX="$PREFIX" \
  -DCMAKE_BUILD_TYPE=Debug

mkdir build
cd $PREFIX/core/build
../config.sh
make -j
make install

* To update code, do "git pull" from $PREFIX/core

*******************************************************************
STEP 2: INSTALL M3DC1-SCOREC
*******************************************************************
cd $PREFIX
git clone https://github.com/PrincetonUniversity/M3DC1
cd m3dc1_scorec
edit config.sh (see example files in config-files)

mkdir build
cd build 
../config.sh
make -j
make install

* To update code, do "git pull".

*******************************************************************
STEP 3: STAND-ALONE TEST PROGRAM
*******************************************************************
In config.sh, set -DENABLE_TESTING to ON and compile

To run, from build directory:
[SCOREC MACHINES]
/usr/local/openmpi/latest/bin/mpirun -np 2 ./epetra ../test/2p/AnalyticModel ../test/2p/test.smb 1 superlu-dist
/usr/local/openmpi/latest/bin/mpirun -np 32 ./epetra ../test/AnalyticModel ../test/1K-4part/part.smb 8
/usr/local/openmpi/latest/bin/mpirun -np 4 ./solver ../test/AnalyticModel ../test/1K-4part/part.smb 1 -on_error_abort

/usr/local/openmpi/latest/bin/mpirun -np 1 ./convert_polar ../test/jsolver/POLAR
(testing meshing with the file "POLAR", generated by PPPL program)
